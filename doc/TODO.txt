Tehtävää aika- ja riippuvuusjärjestyksessä:

1. Luokka MainOscillator: äänen generointi (mahdollisesti LFO:lla moduloiden),
   verhokäyrä.
   
   Kun LFO moduloi, niin Synthesizer kuitenkin aina kutsuu
   LowFrequencyOscillator.generateSound():ia.
   LFO piirtää sille annettuun aaltotaulukkoon signaalinsa, ja sitten
   aaltotaulukko annetaan edelleen osoitinparametrina
   MainOscillator.generateSound():ille.
   
   Siis: jokaiselle Oscillator- ja Lfo-oliolle ei erillistä
   äänipuskuria! Kolme äänisynteesipuskuria Synthesizerissä riittää:
   1. LFO:n ääni. Jos LFO:n taajuus on kiinteä, niin LFO:n ääni on kaikille
      MainOscillatoreille sama. Silloin LFO tarvitsee laskea vain kerran.
   2. MainOscillatorin ääni.
   3. Miksaus. Jokainen soiva MainOscillator generoidaan vuorollaan ja
      summataan miksauspuskuriin.   

   Kun LFO:n taajuus riippuu pääoskillaattorin taajuudesta, niin
   pääoskillaattorin pärähtäessä soimaan se asettaa LFO:n taajuuden.
   (Pääoskillaattorissa on viittaus sille varattuun LFO:hon.)

   * äänengeneroimismetodi
     * ääni generoidaan parametrina annettuun float-taulukkoon
     * lfo (itsenäinen)
     * moduloitu (annetaan parametrina moduloiva float-taulukko,
       jossa samplet)

2. Synthesizer-luokan alkua?
   C-version synth.c:n handle_parameter_change():ssa voisi yhden jättimäisen
   switch-lauseen sijasta tehdä haarukointeja SynthGui::buttonSelectin tapaan.

   Huom! Tallenna vapaat oskillaattorit jonona. Käytännön toteutus voi
   olla taulukko tai STL:n jono. On tehottomampaa käydä läpi kaikki
   oskillaattorit etsien ensimmäistä vapaata aina, kun tulee uusi nuotti.

7. luokka JackInterface
   * katso callbackien toteutuksesta mallia SynthGui-luokasta
   * paitsi että tässä toteutus suoraan staattiseen
     callbackiin nopeuden vuoksi (siis ei niin, että staattinen
     callbacki vielä kutsuu oliokohtaista kääremetodia)
   * analysoi vielä varmuuden vuoksi, että JACKin kutsuketju
     oikein (JACK tarvitsee dataa -> välitetään viimeksi
     generoitu -> annetaan syntetisaattorisäikeelle signaali,
     että voi lähteä generoimaan seuraavaa puskurillista)
   
8. luokka Filter
   



