
notebuffertest.o:     file format elf32-i386


Disassembly of section .text:

00000000 <_Z10testDirectR10NoteBuffer>:
   0:	55                   	push   %ebp
   1:	89 e5                	mov    %esp,%ebp
   3:	83 ec 10             	sub    $0x10,%esp
   6:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
   d:	eb 43                	jmp    52 <_Z10testDirectR10NoteBuffer+0x52>
   f:	8b 55 08             	mov    0x8(%ebp),%edx
  12:	8b 45 fc             	mov    -0x4(%ebp),%eax
  15:	01 d0                	add    %edx,%eax
  17:	c6 00 01             	movb   $0x1,(%eax)
  1a:	8b 45 08             	mov    0x8(%ebp),%eax
  1d:	8b 55 fc             	mov    -0x4(%ebp),%edx
  20:	8d 4a 04             	lea    0x4(%edx),%ecx
  23:	8b 55 fc             	mov    -0x4(%ebp),%edx
  26:	89 14 88             	mov    %edx,(%eax,%ecx,4)
  29:	8b 45 fc             	mov    -0x4(%ebp),%eax
  2c:	8b 55 08             	mov    0x8(%ebp),%edx
  2f:	03 55 fc             	add    -0x4(%ebp),%edx
  32:	83 c2 50             	add    $0x50,%edx
  35:	88 02                	mov    %al,(%edx)
  37:	8b 45 fc             	mov    -0x4(%ebp),%eax
  3a:	8b 55 08             	mov    0x8(%ebp),%edx
  3d:	03 55 fc             	add    -0x4(%ebp),%edx
  40:	83 c2 60             	add    $0x60,%edx
  43:	88 02                	mov    %al,(%edx)
  45:	8b 45 08             	mov    0x8(%ebp),%eax
  48:	8b 55 fc             	mov    -0x4(%ebp),%edx
  4b:	89 50 70             	mov    %edx,0x70(%eax)
  4e:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
  52:	83 7d fc 0f          	cmpl   $0xf,-0x4(%ebp)
  56:	0f 96 c0             	setbe  %al
  59:	84 c0                	test   %al,%al
  5b:	75 b2                	jne    f <_Z10testDirectR10NoteBuffer+0xf>
  5d:	c9                   	leave  
  5e:	c3                   	ret    

0000005f <_Z14testMethodCallR10NoteBuffer>:
  5f:	55                   	push   %ebp
  60:	89 e5                	mov    %esp,%ebp
  62:	83 ec 28             	sub    $0x28,%esp
  65:	8b 45 08             	mov    0x8(%ebp),%eax
  68:	c7 40 70 00 00 00 00 	movl   $0x0,0x70(%eax)
  6f:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
  76:	eb 2a                	jmp    a2 <_Z14testMethodCallR10NoteBuffer+0x43>
  78:	8b 45 f4             	mov    -0xc(%ebp),%eax
  7b:	0f b6 d0             	movzbl %al,%edx
  7e:	8b 45 f4             	mov    -0xc(%ebp),%eax
  81:	0f b6 c0             	movzbl %al,%eax
  84:	89 54 24 0c          	mov    %edx,0xc(%esp)
  88:	89 44 24 08          	mov    %eax,0x8(%esp)
  8c:	8b 45 f4             	mov    -0xc(%ebp),%eax
  8f:	89 44 24 04          	mov    %eax,0x4(%esp)
  93:	8b 45 08             	mov    0x8(%ebp),%eax
  96:	89 04 24             	mov    %eax,(%esp)
  99:	e8 fc ff ff ff       	call   9a <_Z14testMethodCallR10NoteBuffer+0x3b>
  9e:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
  a2:	83 7d f4 0f          	cmpl   $0xf,-0xc(%ebp)
  a6:	0f 96 c0             	setbe  %al
  a9:	84 c0                	test   %al,%al
  ab:	75 cb                	jne    78 <_Z14testMethodCallR10NoteBuffer+0x19>
  ad:	c9                   	leave  
  ae:	c3                   	ret    

000000af <_Z10testPackedR10NoteBuffer>:
  af:	55                   	push   %ebp
  b0:	89 e5                	mov    %esp,%ebp
  b2:	83 ec 10             	sub    $0x10,%esp
  b5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
  bc:	eb 2b                	jmp    e9 <_Z10testPackedR10NoteBuffer+0x3a>
  be:	8b 45 fc             	mov    -0x4(%ebp),%eax
  c1:	89 c2                	mov    %eax,%edx
  c3:	c1 e2 18             	shl    $0x18,%edx
  c6:	8b 45 fc             	mov    -0x4(%ebp),%eax
  c9:	c1 e0 11             	shl    $0x11,%eax
  cc:	09 d0                	or     %edx,%eax
  ce:	0b 45 fc             	or     -0x4(%ebp),%eax
  d1:	89 c1                	mov    %eax,%ecx
  d3:	81 c9 00 00 00 80    	or     $0x80000000,%ecx
  d9:	8b 45 08             	mov    0x8(%ebp),%eax
  dc:	8b 55 fc             	mov    -0x4(%ebp),%edx
  df:	83 c2 04             	add    $0x4,%edx
  e2:	89 0c 90             	mov    %ecx,(%eax,%edx,4)
  e5:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
  e9:	83 7d fc 0f          	cmpl   $0xf,-0x4(%ebp)
  ed:	0f 96 c0             	setbe  %al
  f0:	84 c0                	test   %al,%al
  f2:	75 ca                	jne    be <_Z10testPackedR10NoteBuffer+0xf>
  f4:	c9                   	leave  
  f5:	c3                   	ret    

000000f6 <main>:
  f6:	55                   	push   %ebp
  f7:	89 e5                	mov    %esp,%ebp
  f9:	83 e4 f0             	and    $0xfffffff0,%esp
  fc:	81 ec a0 00 00 00    	sub    $0xa0,%esp
 102:	8b 45 0c             	mov    0xc(%ebp),%eax
 105:	89 44 24 1c          	mov    %eax,0x1c(%esp)
 109:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 10f:	89 84 24 9c 00 00 00 	mov    %eax,0x9c(%esp)
 116:	31 c0                	xor    %eax,%eax
 118:	8d 44 24 28          	lea    0x28(%esp),%eax
 11c:	89 04 24             	mov    %eax,(%esp)
 11f:	e8 fc ff ff ff       	call   120 <main+0x2a>
 124:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%esp)
 12b:	00 
 12c:	eb 29                	jmp    157 <main+0x61>
 12e:	8d 44 24 28          	lea    0x28(%esp),%eax
 132:	89 04 24             	mov    %eax,(%esp)
 135:	e8 fc ff ff ff       	call   136 <main+0x40>
 13a:	8d 44 24 28          	lea    0x28(%esp),%eax
 13e:	89 04 24             	mov    %eax,(%esp)
 141:	e8 fc ff ff ff       	call   142 <main+0x4c>
 146:	8d 44 24 28          	lea    0x28(%esp),%eax
 14a:	89 04 24             	mov    %eax,(%esp)
 14d:	e8 fc ff ff ff       	call   14e <main+0x58>
 152:	83 44 24 24 01       	addl   $0x1,0x24(%esp)
 157:	81 7c 24 24 3f 42 0f 	cmpl   $0xf423f,0x24(%esp)
 15e:	00 
 15f:	0f 96 c0             	setbe  %al
 162:	84 c0                	test   %al,%al
 164:	75 c8                	jne    12e <main+0x38>
 166:	b8 00 00 00 00       	mov    $0x0,%eax
 16b:	8b 94 24 9c 00 00 00 	mov    0x9c(%esp),%edx
 172:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 179:	74 05                	je     180 <main+0x8a>
 17b:	e8 fc ff ff ff       	call   17c <main+0x86>
 180:	c9                   	leave  
 181:	c3                   	ret    

00000182 <_ZN10NoteBufferC1Ev>:
 182:	55                   	push   %ebp
 183:	89 e5                	mov    %esp,%ebp
 185:	8b 45 08             	mov    0x8(%ebp),%eax
 188:	c7 40 70 00 00 00 00 	movl   $0x0,0x70(%eax)
 18f:	5d                   	pop    %ebp
 190:	c3                   	ret    
 191:	90                   	nop

00000192 <_ZN10NoteBuffer9addNoteOnEjhh>:
 192:	55                   	push   %ebp
 193:	89 e5                	mov    %esp,%ebp
 195:	83 ec 08             	sub    $0x8,%esp
 198:	8b 55 10             	mov    0x10(%ebp),%edx
 19b:	8b 45 14             	mov    0x14(%ebp),%eax
 19e:	88 55 fc             	mov    %dl,-0x4(%ebp)
 1a1:	88 45 f8             	mov    %al,-0x8(%ebp)
 1a4:	8b 45 08             	mov    0x8(%ebp),%eax
 1a7:	8b 40 70             	mov    0x70(%eax),%eax
 1aa:	83 f8 0f             	cmp    $0xf,%eax
 1ad:	77 50                	ja     1ff <_ZN10NoteBuffer9addNoteOnEjhh+0x6d>
 1af:	8b 45 08             	mov    0x8(%ebp),%eax
 1b2:	8b 40 70             	mov    0x70(%eax),%eax
 1b5:	8b 55 08             	mov    0x8(%ebp),%edx
 1b8:	c6 04 02 01          	movb   $0x1,(%edx,%eax,1)
 1bc:	8b 45 08             	mov    0x8(%ebp),%eax
 1bf:	8b 50 70             	mov    0x70(%eax),%edx
 1c2:	8b 45 08             	mov    0x8(%ebp),%eax
 1c5:	8d 4a 04             	lea    0x4(%edx),%ecx
 1c8:	8b 55 0c             	mov    0xc(%ebp),%edx
 1cb:	89 14 88             	mov    %edx,(%eax,%ecx,4)
 1ce:	8b 45 08             	mov    0x8(%ebp),%eax
 1d1:	8b 40 70             	mov    0x70(%eax),%eax
 1d4:	8b 55 08             	mov    0x8(%ebp),%edx
 1d7:	0f b6 4d fc          	movzbl -0x4(%ebp),%ecx
 1db:	88 4c 02 50          	mov    %cl,0x50(%edx,%eax,1)
 1df:	8b 45 08             	mov    0x8(%ebp),%eax
 1e2:	8b 40 70             	mov    0x70(%eax),%eax
 1e5:	8b 55 08             	mov    0x8(%ebp),%edx
 1e8:	0f b6 4d f8          	movzbl -0x8(%ebp),%ecx
 1ec:	88 4c 02 60          	mov    %cl,0x60(%edx,%eax,1)
 1f0:	8b 45 08             	mov    0x8(%ebp),%eax
 1f3:	8b 40 70             	mov    0x70(%eax),%eax
 1f6:	8d 50 01             	lea    0x1(%eax),%edx
 1f9:	8b 45 08             	mov    0x8(%ebp),%eax
 1fc:	89 50 70             	mov    %edx,0x70(%eax)
 1ff:	c9                   	leave  
 200:	c3                   	ret    

00000201 <_Z41__static_initialization_and_destruction_0ii>:
 201:	55                   	push   %ebp
 202:	89 e5                	mov    %esp,%ebp
 204:	83 ec 18             	sub    $0x18,%esp
 207:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)
 20b:	75 32                	jne    23f <_Z41__static_initialization_and_destruction_0ii+0x3e>
 20d:	81 7d 0c ff ff 00 00 	cmpl   $0xffff,0xc(%ebp)
 214:	75 29                	jne    23f <_Z41__static_initialization_and_destruction_0ii+0x3e>
 216:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 21d:	e8 fc ff ff ff       	call   21e <_Z41__static_initialization_and_destruction_0ii+0x1d>
 222:	b8 00 00 00 00       	mov    $0x0,%eax
 227:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
 22e:	00 
 22f:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
 236:	00 
 237:	89 04 24             	mov    %eax,(%esp)
 23a:	e8 fc ff ff ff       	call   23b <_Z41__static_initialization_and_destruction_0ii+0x3a>
 23f:	c9                   	leave  
 240:	c3                   	ret    

00000241 <_GLOBAL__sub_I__Z10testDirectR10NoteBuffer>:
 241:	55                   	push   %ebp
 242:	89 e5                	mov    %esp,%ebp
 244:	83 ec 18             	sub    $0x18,%esp
 247:	c7 44 24 04 ff ff 00 	movl   $0xffff,0x4(%esp)
 24e:	00 
 24f:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 256:	e8 a6 ff ff ff       	call   201 <_Z41__static_initialization_and_destruction_0ii>
 25b:	c9                   	leave  
 25c:	c3                   	ret    
